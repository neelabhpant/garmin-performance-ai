"""Pre-built sample personas for demo purposes."""

def get_sample_persona(name: str) -> dict:
    """Get sample persona data for demo."""
    
    personas = {
        "Elite Emma": {
            'acute_load': 85,
            'chronic_load': 80,
            'acwr': 1.06,
            'recent_vo2_max': 62,
            'vo2_max_trend': 0.3,
            'weekly_mileage': 65,
            'mileage_trend': 2,
            'avg_pace_recent': 4.2,
            'pace_improvement': -0.05,
            'hrv_baseline': 65,
            'hrv_cv': 0.08,
            'sleep_avg': 8.5,
            'sleep_consistency': 0.9,
            'fatigue_accumulated': 4,
            'recovery_score': 85,
            'tempo_percentage': 0.20,
            'interval_percentage': 0.20,
            'long_run_percentage': 0.25,
            'age': 28,
            'gender': 1,
            'bmi': 19.5,
            'years_running': 12,
            'injury_history': 0,
            'temperature_avg': 18,
            'humidity_avg': 55
        },
        
        "Competitive Carlos": {
            'acute_load': 60,
            'chronic_load': 55,
            'acwr': 1.09,
            'recent_vo2_max': 54,
            'vo2_max_trend': 0.2,
            'weekly_mileage': 40,
            'mileage_trend': 1.5,
            'avg_pace_recent': 5.0,
            'pace_improvement': -0.03,
            'hrv_baseline': 58,
            'hrv_cv': 0.10,
            'sleep_avg': 7.5,
            'sleep_consistency': 0.8,
            'fatigue_accumulated': 5,
            'recovery_score': 75,
            'tempo_percentage': 0.18,
            'interval_percentage': 0.18,
            'long_run_percentage': 0.22,
            'age': 35,
            'gender': 0,
            'bmi': 22,
            'years_running': 8,
            'injury_history': 0,
            'temperature_avg': 20,
            'humidity_avg': 60
        },
        
        "Recreational Rachel": {
            'acute_load': 35,
            'chronic_load': 32,
            'acwr': 1.09,
            'recent_vo2_max': 45,
            'vo2_max_trend': 0.1,
            'weekly_mileage': 20,
            'mileage_trend': 0.5,
            'avg_pace_recent': 6.0,
            'pace_improvement': -0.02,
            'hrv_baseline': 52,
            'hrv_cv': 0.12,
            'sleep_avg': 7.0,
            'sleep_consistency': 0.7,
            'fatigue_accumulated': 6,
            'recovery_score': 65,
            'tempo_percentage': 0.10,
            'interval_percentage': 0.10,
            'long_run_percentage': 0.20,
            'age': 42,
            'gender': 1,
            'bmi': 23.5,
            'years_running': 4,
            'injury_history': 0,
            'temperature_avg': 22,
            'humidity_avg': 65
        },
        
        "Beginner Ben": {
            'acute_load': 18,
            'chronic_load': 15,
            'acwr': 1.20,
            'recent_vo2_max': 38,
            'vo2_max_trend': 0.15,
            'weekly_mileage': 10,
            'mileage_trend': 1.0,
            'avg_pace_recent': 7.2,
            'pace_improvement': -0.08,
            'hrv_baseline': 48,
            'hrv_cv': 0.15,
            'sleep_avg': 6.5,
            'sleep_consistency': 0.6,
            'fatigue_accumulated': 7,
            'recovery_score': 55,
            'tempo_percentage': 0.05,
            'interval_percentage': 0.05,
            'long_run_percentage': 0.15,
            'age': 38,
            'gender': 0,
            'bmi': 26,
            'years_running': 1,
            'injury_history': 1,
            'temperature_avg': 24,
            'humidity_avg': 70
        }
    }
    
    return personas.get(name, personas["Recreational Rachel"])